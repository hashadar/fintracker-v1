"""Utility modules for the financial dashboard app."""

from .charts import create_asset_type_breakdown, create_asset_type_time_series
from .config import (
    ASSET_TYPES,
    BENCHMARK_RETURN,
    CAR_DEPRECIATION_RATE,
    CAR_LOAN_STATUSES,
    CAR_MAINTENANCE_FREQUENCY,
    CASHFLOW_TYPES,
    CONFIDENCE_LEVEL,
    CURRENCY_FORMAT,
    CURRENCY_SYMBOL,
    DATE_FORMAT,
    DEFAULT_CAR_FORECAST_PERIODS,
    DEFAULT_FORECAST_PERIODS,
    DEFAULT_ROLLING_WINDOW,
    DISPLAY_DATE_FORMAT,
    INFLATION_RATE,
    INITIAL_SIDEBAR_STATE,
    LAYOUT,
    MAX_DRAWDOWN_WINDOW,
    MIN_DATA_POINTS_FOR_FORECAST,
    PAGE_ICON,
    PAGE_TITLE,
    PERCENTAGE_FORMAT,
    RISK_FREE_RATE,
    SEASONAL_PERIODS,
    SHORT_DATE_FORMAT,
    VAR_CONFIDENCE_LEVEL,
    VOLATILITY_WINDOW,
)
from .data_processing import (
    calculate_actual_mom_changes,
    calculate_actual_pension_returns,
    calculate_allocation_metrics,
    calculate_asset_type_metrics,
    calculate_car_equity,
    calculate_car_monthly_costs,
    calculate_rolling_metrics,
    calculate_vehicle_metrics,
    calculate_vehicle_summary_metrics,
    create_allocation_time_series,
    create_platform_allocation_time_series,
    create_platform_trends_data,
    filter_by_asset_type,
    forecast_pension_growth,
    get_asset_breakdown,
    get_asset_type_time_periods,
    get_car_equity_trends,
    get_cumulative_pension_cashflows,
    get_latest_month_data,
    get_monthly_aggregation,
)
from .design import (
    complex_card,
    complex_emphasis_card,
    create_chart_grid,
    create_metric_grid,
    create_page_header,
    create_pension_asset_analysis,
    create_pension_forecast_section,
    create_section_header,
    create_vehicle_analytics_charts,
    emphasis_card,
    simple_card,
)
from .design.tokens import (
    BACKGROUND_PRIMARY,
    BACKGROUND_SECONDARY,
    BACKGROUND_TERTIARY,
    BORDER_PRIMARY,
    BORDER_RADIUS_2XL,
    BORDER_RADIUS_FULL,
    BORDER_RADIUS_LG,
    BORDER_RADIUS_MD,
    # Border radius tokens
    BORDER_RADIUS_SM,
    BORDER_RADIUS_XL,
    BORDER_SECONDARY,
    BRAND_ERROR,
    BRAND_INFO,
    # Color tokens
    BRAND_PRIMARY,
    BRAND_SECONDARY,
    BRAND_SUCCESS,
    BRAND_WARNING,
    CHART_AXIS_LINE_COLOR,
    CHART_AXIS_LINE_WIDTH,
    CHART_COLORS,
    CHART_FONT_FAMILY,
    CHART_FONT_SIZE,
    CHART_GRID_COLOR,
    CHART_GRID_WIDTH,
    CHART_HEIGHT,
    CHART_MARGIN,
    CHART_PAPER_BGCOLOR,
    CHART_PLOT_BGCOLOR,
    # Chart configuration tokens
    CHART_TEMPLATE,
    FONT_SIZE_2XL,
    FONT_SIZE_3XL,
    FONT_SIZE_4XL,
    FONT_SIZE_5XL,
    FONT_SIZE_BASE,
    FONT_SIZE_LG,
    FONT_SIZE_SM,
    FONT_SIZE_XL,
    # Typography tokens
    FONT_SIZE_XS,
    FONT_WEIGHT_BOLD,
    FONT_WEIGHT_EXTRABOLD,
    FONT_WEIGHT_MEDIUM,
    FONT_WEIGHT_NORMAL,
    FONT_WEIGHT_SEMIBOLD,
    LETTER_SPACING_NORMAL,
    LETTER_SPACING_TIGHT,
    LETTER_SPACING_WIDE,
    LETTER_SPACING_WIDER,
    LETTER_SPACING_WIDEST,
    LINE_HEIGHT_NORMAL,
    LINE_HEIGHT_RELAXED,
    LINE_HEIGHT_TIGHT,
    NEUTRAL_50,
    NEUTRAL_100,
    NEUTRAL_200,
    NEUTRAL_300,
    NEUTRAL_400,
    NEUTRAL_500,
    NEUTRAL_600,
    NEUTRAL_700,
    NEUTRAL_800,
    NEUTRAL_900,
    SHADOW_2XL,
    SHADOW_LG,
    SHADOW_MD,
    # Shadow tokens
    SHADOW_SM,
    SHADOW_XL,
    # Spacing tokens
    SPACE_1,
    SPACE_2,
    SPACE_3,
    SPACE_4,
    SPACE_5,
    SPACE_6,
    SPACE_8,
    SPACE_10,
    SPACE_12,
    SPACE_16,
    SPACE_20,
    TEXT_INVERSE,
    TEXT_MUTED,
    TEXT_PRIMARY,
    TEXT_SECONDARY,
    TEXT_TERTIARY,
    # Transition tokens
    TRANSITION_FAST,
    TRANSITION_NORMAL,
    TRANSITION_SLOW,
    get_background_gradient,
    get_border_color,
    get_card_base_styles,
    get_card_caption_styles,
    get_card_change_styles,
    get_card_metric_styles,
    get_card_title_styles,
    # Utility functions
    get_change_color,
    get_emphasis_accent_bar,
    get_emphasis_card_styles,
    get_emphasis_card_title_styles,
    get_emphasis_color,
)
from .etl.asset_classifier import classify_asset_types
from .etl.data_loader import (
    filter_data_by_date_range,
    get_month_range,
    load_car_assets,
    load_car_expenses,
    load_car_payments,
    load_data,
    load_pension_cashflows,
)

__all__ = [
    # Configuration constants
    "ASSET_TYPES",
    "DATE_FORMAT",
    "DISPLAY_DATE_FORMAT",
    "SHORT_DATE_FORMAT",
    "CURRENCY_FORMAT",
    "CURRENCY_SYMBOL",
    "PERCENTAGE_FORMAT",
    "RISK_FREE_RATE",
    "DEFAULT_FORECAST_PERIODS",
    "DEFAULT_ROLLING_WINDOW",
    "PAGE_TITLE",
    "PAGE_ICON",
    "LAYOUT",
    "INITIAL_SIDEBAR_STATE",
    "MIN_DATA_POINTS_FOR_FORECAST",
    "SEASONAL_PERIODS",
    "CONFIDENCE_LEVEL",
    "VOLATILITY_WINDOW",
    "VAR_CONFIDENCE_LEVEL",
    "MAX_DRAWDOWN_WINDOW",
    "BENCHMARK_RETURN",
    "INFLATION_RATE",
    "DEFAULT_CAR_FORECAST_PERIODS",
    "CAR_DEPRECIATION_RATE",
    "CAR_MAINTENANCE_FREQUENCY",
    "CAR_LOAN_STATUSES",
    "CASHFLOW_TYPES",
    # ETL functions (core data loading and transformation)
    "load_data",
    "load_pension_cashflows",
    "filter_data_by_date_range",
    "get_month_range",
    "classify_asset_types",
    # Data processing functions
    "filter_by_asset_type",
    "get_latest_month_data",
    "get_monthly_aggregation",
    "calculate_rolling_metrics",
    "get_asset_breakdown",
    "calculate_asset_type_metrics",
    "calculate_allocation_metrics",
    "create_allocation_time_series",
    "get_asset_type_time_periods",
    "create_platform_trends_data",
    "create_platform_allocation_time_series",
    # Pension cashflow analytics
    "calculate_actual_pension_returns",
    "get_cumulative_pension_cashflows",
    "calculate_actual_mom_changes",
    "forecast_pension_growth",
    # Car data processing functions
    "calculate_car_equity",
    "calculate_car_monthly_costs",
    "get_car_equity_trends",
    "calculate_vehicle_metrics",
    "calculate_vehicle_summary_metrics",
    # Chart functions
    "create_asset_type_time_series",
    "create_asset_type_breakdown",
    # Design functions
    "simple_card",
    "emphasis_card",
    "complex_card",
    "complex_emphasis_card",
    "create_metric_grid",
    "create_chart_grid",
    "create_section_header",
    "create_page_header",
    "create_pension_asset_analysis",
    "create_pension_forecast_section",
    "create_vehicle_analytics_charts",
    # Design tokens
    "BRAND_PRIMARY",
    "BRAND_SECONDARY",
    "BRAND_SUCCESS",
    "BRAND_WARNING",
    "BRAND_ERROR",
    "BRAND_INFO",
    "NEUTRAL_50",
    "NEUTRAL_100",
    "NEUTRAL_200",
    "NEUTRAL_300",
    "NEUTRAL_400",
    "NEUTRAL_500",
    "NEUTRAL_600",
    "NEUTRAL_700",
    "NEUTRAL_800",
    "NEUTRAL_900",
    "BACKGROUND_PRIMARY",
    "BACKGROUND_SECONDARY",
    "BACKGROUND_TERTIARY",
    "BORDER_PRIMARY",
    "BORDER_SECONDARY",
    "TEXT_PRIMARY",
    "TEXT_SECONDARY",
    "TEXT_TERTIARY",
    "TEXT_MUTED",
    "TEXT_INVERSE",
    "FONT_SIZE_XS",
    "FONT_SIZE_SM",
    "FONT_SIZE_BASE",
    "FONT_SIZE_LG",
    "FONT_SIZE_XL",
    "FONT_SIZE_2XL",
    "FONT_SIZE_3XL",
    "FONT_SIZE_4XL",
    "FONT_SIZE_5XL",
    "FONT_WEIGHT_NORMAL",
    "FONT_WEIGHT_MEDIUM",
    "FONT_WEIGHT_SEMIBOLD",
    "FONT_WEIGHT_BOLD",
    "FONT_WEIGHT_EXTRABOLD",
    "LINE_HEIGHT_TIGHT",
    "LINE_HEIGHT_NORMAL",
    "LINE_HEIGHT_RELAXED",
    "LETTER_SPACING_TIGHT",
    "LETTER_SPACING_NORMAL",
    "LETTER_SPACING_WIDE",
    "LETTER_SPACING_WIDER",
    "LETTER_SPACING_WIDEST",
    "SPACE_1",
    "SPACE_2",
    "SPACE_3",
    "SPACE_4",
    "SPACE_5",
    "SPACE_6",
    "SPACE_8",
    "SPACE_10",
    "SPACE_12",
    "SPACE_16",
    "SPACE_20",
    "BORDER_RADIUS_SM",
    "BORDER_RADIUS_MD",
    "BORDER_RADIUS_LG",
    "BORDER_RADIUS_XL",
    "BORDER_RADIUS_2XL",
    "BORDER_RADIUS_FULL",
    "SHADOW_SM",
    "SHADOW_MD",
    "SHADOW_LG",
    "SHADOW_XL",
    "SHADOW_2XL",
    "TRANSITION_FAST",
    "TRANSITION_NORMAL",
    "TRANSITION_SLOW",
    # Chart configuration tokens
    "CHART_TEMPLATE",
    "CHART_FONT_FAMILY",
    "CHART_FONT_SIZE",
    "CHART_HEIGHT",
    "CHART_MARGIN",
    "CHART_GRID_COLOR",
    "CHART_AXIS_LINE_COLOR",
    "CHART_AXIS_LINE_WIDTH",
    "CHART_GRID_WIDTH",
    "CHART_PLOT_BGCOLOR",
    "CHART_PAPER_BGCOLOR",
    "CHART_COLORS",
    "get_change_color",
    "get_emphasis_color",
    "get_background_gradient",
    "get_border_color",
    "get_card_base_styles",
    "get_emphasis_card_styles",
    "get_card_title_styles",
    "get_emphasis_card_title_styles",
    "get_card_metric_styles",
    "get_card_caption_styles",
    "get_card_change_styles",
    "get_emphasis_accent_bar",
]

# Validate configuration on module import
try:
    validation_result = validate_config()
    if not validation_result["valid"]:
        import warnings

        warnings.warn(f"Configuration validation failed: {validation_result['errors']}")
    if validation_result["warnings"]:
        import warnings

        for warning in validation_result["warnings"]:
            warnings.warn(f"Configuration warning: {warning}")
except Exception as e:
    import warnings

    warnings.warn(f"Configuration validation error: {str(e)}")
